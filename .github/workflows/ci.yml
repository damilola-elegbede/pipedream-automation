name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.12"]  # System Python (3.8) and Latest (3.12)
        python-name: ["System Python 3.8", "Latest Python 3.12"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for better versioning
    
    - name: Set up ${{ matrix.python-name }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Enable pip caching
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    
    - name: List directory contents
      run: |
        echo "Current directory structure:"
        ls -R
    
    - name: Run linting
      run: |
        flake8 src tests || true  # Continue even if flake8 finds issues
        black --check src tests || true
        isort --check-only src tests || true
        mypy src || true
        pydocstyle src || true
    
    - name: Run tests with coverage
      run: |
        python -m pytest --cov=src --cov-report=xml -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 